services:
  postgres:
    image: postgres:15-alpine
    container_name: coffee-tracker-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-coffee}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-coffee_password}
      - POSTGRES_DB=${POSTGRES_DB:-coffee_db}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coffee -d coffee_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M

  redis:
    image: redis:7-alpine
    container_name: coffee-tracker-redis
    restart: unless-stopped
    networks:
      - internal
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M

  coffee-tracker:
    # For production: use pre-built image from GitHub Container Registry
    # image: ghcr.io/dny1020/coffee-tracker:main-${GIT_SHA:-latest}
    # For development: build locally
    build: .
    container_name: coffee-tracker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-coffee}:${POSTGRES_PASSWORD:-coffee_password}@postgres:5432/${POSTGRES_DB:-coffee_db}
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - API_KEY=${API_KEY:-coffee-addict-secret-key-2025}
      - FASTAPI_ENV=${FASTAPI_ENV:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - TZ=${TZ:-UTC}
    networks:
      - traefik_net
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.coffee-tracker.rule=Host(`coffee.dommain.co`)"
      - "traefik.http.routers.coffee-tracker.entrypoints=websecure"
      - "traefik.http.routers.coffee-tracker.tls=true"
      - "traefik.http.routers.coffee-tracker.tls.certresolver=myresolver"
      - "traefik.http.services.coffee-tracker.loadbalancer.server.port=8000"
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 50s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

volumes:
  redis_data:
  pg_data:
networks:
  traefik_net:
    external: true
  internal:
    driver: bridge
